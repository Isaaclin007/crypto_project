rm(list=ls())
library(readr)
library(ggplot2)
library(grid)
library(gridExtra)
library(Hmisc)
library(tidyverse)
library(lubridate)
library(data.table)
library(ecm)
library(urca)
library(vars)
library(plyr)  ## or dplyr (transform -> mutate)
dt = readRDS(file = "dt.rds")
summary(dt)
# Data selection ####
# select right date variable
# dt = dt %>% filter(epoch>1521239102 & epoch<1521510302)
# Create profit measure
calprofit = function(x){
log(x/lag(x,1))
}
dt = data.table(dt)
profit= dt[,calprofit(bal_total),by=exchange]
profit = profit[,2]
dt = cbind(dt,profit)
colnames(dt)[17] <- "profit"
# dt = rename(dt, c('V1'="profit"))
cum_profit = dt[,cumsum(ifelse(is.na(profit), 0, profit)),by = exchange]
cum_profit = cum_profit[,2]
dt = cbind(dt,cum_profit)
colnames(dt)[18] <- "cum_profit"
#dt=rename(dt, c('V1'="cum_profit"))
dt = mutate(dt,
dif_nd = arb_now - arb_day,
dif_nh = arb_now - arb_hour,
dif_dm = arb_day - arb_month,
dif_nw = arb_day - arb_week,
bas = market_ask/market_bid)
# Total Performance ####
total = dt %>%
filter(exchange == 'total') %>%
mutate(tb_filter = bal_total - 40*market_price,
profit_filter = calprofit(tb_filter),
cum_profit_filter =cumsum(ifelse(is.na(profit_filter), 0, profit_filter)) )
tp = ggplot(data = total) +
geom_line(aes(x=time,y=cum_profit))
tp_filter = ggplot(data = total) +
geom_line(aes(x=time,y=cum_profit_filter))
#pdf('total_profit.pdf',paper='special')
grid.newpage()
grid.draw(rbind(ggplotGrob(tp), ggplotGrob(tp_filter), size = "last"))
# Individual Performance ####
## log profit
neworder <- c('total','bitcoincoid','gdax','quadrigacx','livecoin','independentreserve','bitbay','kraken','huobipro')
dt2 <- arrange(transform(dt,
exchange=factor(exchange,levels=neworder)),exchange)
ggplot(data = dt2) +
geom_line(aes(x=time,y=cum_profit)) +
facet_wrap(~exchange,nrow=3,scale ='free')
## fiat balance
# Target: LB = 0.5; GB = 0.55
ggplot(data = dt2) +
geom_line(aes(x=time,y=bal_fiat/bal_total)) +
facet_wrap(~exchange,nrow=3)
ggplot(data = dt2) +
geom_boxplot(aes(x=time,y=bal_fiat/bal_total,group = 1)) +
facet_wrap(~exchange,nrow=3)
dt = data.table(dt)
profit= dt[,calprofit(bal_total),by=exchange]
View(dt)
dt = readRDS(file = "dt.rds")
---
title: "March Report"
author: "Zi Yin"
date: "31/03/2018"
output:
html_document:
toc: true # table of content true
toc_depth: 3  # upto three depths of headings (specified by #, ## and ###)
number_sections: true  ## if you want number sections at each table header
theme: united  # many options for theme, this one is my favorite.
highlight: tango  # specifies the syntax highlighting style
html_notebook:
toc: yes
runtime: shiny
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(readr)
library(ggplot2)
library(grid)
library(gridExtra)
library(Hmisc)
library(tidyverse)
library(lubridate)
library(data.table)
library(ecm)
library(urca)
library(vars)
library(plyr)
bitbucketURL <- ('https://bitbucket.org/ziyin106/report/raw/4b3110d4c0aca03bb43b89a9e7c72026339c8d09/May/dt.rds')
download.file(bitbucketURL,"dt.rds", method="curl")
dt <- readRDS("dt.rds")
calprofit = function(x){
log(x/lag(x,1))
}
dt = data.table(dt)
profit= dt[,calprofit(bal_total),by=exchange]
profit = profit[,2]
dt = cbind(dt,profit)
colnames(dt)[17] <- "profit"
cum_profit = dt[,cumsum(ifelse(is.na(profit), 0, profit)),by = exchange]
cum_profit = cum_profit[,2]
dt = cbind(dt,cum_profit)
colnames(dt)[18] <- "cum_profit"
dt = mutate(dt,
dif_nd = arb_now - arb_day,
dif_nh = arb_now - arb_hour,
dif_dm = arb_day - arb_month,
dif_nw = arb_day - arb_week,
bas = market_ask/market_bid)
total = dt %>%
filter(exchange == 'total') %>%
mutate(tb_filter = bal_total - 40*market_price,
profit_filter = calprofit(tb_filter),
cum_profit_filter =cumsum(ifelse(is.na(profit_filter), 0, profit_filter)) )
bitbucketURL <- ("https://bitbucket.org/ziyin106/report/raw/4b3110d4c0aca03bb43b89a9e7c72026339c8d09/May/dt_trans.rds")
download.file(bitbucketURL,"dt.rds", method="curl")
dt_trans <- readRDS("dt.rds")
bitbucketURL <- ("https://bitbucket.org/ziyin106/report/raw/4b3110d4c0aca03bb43b89a9e7c72026339c8d09/May/dt_gv.rds")
download.file(bitbucketURL,"dt.rds", method="curl")
global_vol = readRDS("dt.rds")
# select transaction data (livecoin record the deposite and withdraw)
dt_trans = dt_trans %>%
filter(price>0)
summary(dt)
summary(dt_trans)
tp = ggplot(data = total) +
geom_line(aes(x=time,y=cum_profit))
tp_filter = ggplot(data = total) +
geom_line(aes(x=time,y=cum_profit_filter))
tp_price = ggplot(data = total) +
geom_line(aes(x=time,y=market_price))
#pdf('total_profit.pdf',paper='special')
grid.newpage()
grid.draw(rbind(ggplotGrob(tp), ggplotGrob(tp_filter), ggplotGrob(tp_price),size = "last"))
ggplot(data = total) +
geom_line(aes(x=time,y=bal_eth))
sliderInput("eth", "Amount of borrowed eth:", min = 0, max = 70, value = 0)
dt = ddply(dt_trans,~date,summarise,sum=sum(vol))
View(dt_trans)
summary(dt_trans)
dt = ddply(dt_trans,~date,summarise,sum=sum(as.numeric(vol))
dt = ddply(dt_trans,~date,summarise,sum=sum(as.numeric(vol)))
as.numeric(vol)
as.numeric(dt_trans$vol)
dt_trans$vol = as.numeric(dt_trans$vol)
summary(dt_trans$vol)
d[is.na(dt_trans$vol)] <- 0
dt_trans$vol[is.na(dt_trans$vol)] <- 0
dt = ddply(dt_trans,~date,summarise,sum=sum()
ggplot(data = dt)+
dt = ddply(dt_trans,~date,summarise,sum=sum(vol))
ggplot(data = dt)+
geom_line(aes(x = date, y = sum)) +
ylab('eth volume')
View(dt)
View(cum_profit)
View(profit)
View(total)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(readr)
library(ggplot2)
library(grid)
library(gridExtra)
library(Hmisc)
library(tidyverse)
library(lubridate)
library(data.table)
library(ecm)
library(urca)
library(vars)
library(plyr)
bitbucketURL <- ('https://bitbucket.org/ziyin106/report/raw/752efe563d10266ace17e5c83cc37215826d7c00/July/dt.rds')
download.file(bitbucketURL,"dt.rds", method="curl")
dt <- readRDS("dt.rds")
# dt <- readRDS("dt.rds")
calprofit = function(x){
log(x/lag(x,1))
}
dt = data.table(dt)
profit= dt[,calprofit(bal_total),by=exchange]
profit = profit[,2]
dt = cbind(dt,profit)
colnames(dt)[17] <- "profit"
cum_profit = dt[,cumsum(ifelse(is.na(profit), 0, profit)),by = exchange]
cum_profit = cum_profit[,2]
dt = cbind(dt,cum_profit)
colnames(dt)[18] <- "cum_profit"
dt = mutate(dt,
dif_nd = arb_now - arb_day,
dif_nh = arb_now - arb_hour,
dif_dm = arb_day - arb_month,
dif_nw = arb_day - arb_week,
bas = market_ask/market_bid)
total = dt %>%
filter(exchange == 'total') %>%
mutate(tb_filter = bal_total - 40*market_price,
profit_filter = calprofit(tb_filter),
cum_profit_filter =cumsum(ifelse(is.na(profit_filter), 0, profit_filter)) )
#pdf('total_profit.pdf',paper='special')
grid.newpage()
neworder <- c('total','bitcoincoid','quadrigacx','livecoin','hitbtc','gdax','quoinex','kucoin','lbank','liqui','quoinex_jpy','poloniex','cex')
dt2 <- arrange(transform(dt,
exchange=factor(exchange,levels=neworder)),exchange)
ggplot(data = dt2) +
geom_line(aes(x=time,y=cum_profit)) +
facet_wrap(~exchange,nrow=3,scale ='free')
neworder <- c('total','bitcoincoid','quadrigacx','livecoin','hitbtc','gdax','quoinex','kucoin','lbank','liqui','quoinex_jpy','poloniex','cex','bleutrade')
dt2 <- arrange(transform(dt,
exchange=factor(exchange,levels=neworder)),exchange)
ggplot(data = dt2) +
geom_line(aes(x=time,y=cum_profit)) +
facet_wrap(~exchange,nrow=3,scale ='free')
bitbucketURL <- ("https://bitbucket.org/ziyin106/report/raw/752efe563d10266ace17e5c83cc37215826d7c00/July/dt_trans.rds")
download.file(bitbucketURL,"dt.rds", method="curl")
dt_trans <- readRDS("dt.rds")
bitbucketURL <- ("https://bitbucket.org/ziyin106/report/raw/752efe563d10266ace17e5c83cc37215826d7c00/July/dt_gv.rds")
download.file(bitbucketURL,"dt.rds", method="curl")
global_vol = readRDS("dt.rds")
# dt_trans <- readRDS("dt_trans.rds")
# global_vol = readRDS("dt_gv.rds")
# select transaction data (livecoin record the deposite and withdraw)
dt_trans = dt_trans %>%
filter(price>0)
View(dt_trans)
# select transaction data (livecoin record the deposite and withdraw)
dt_trans = dt_trans %>%
filter(price>0) %>%
filter(time > 2018-07-01 12:52:08)
# select transaction data (livecoin record the deposite and withdraw)
dt_trans = dt_trans %>%
filter(price>0) %>%
filter(time > '2018-07-01 12:52:08')
View(dt_trans)
View(dt2)
View(dt2)
